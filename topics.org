* Темы слайдов о python
** intro
*** Слайды
   1. Обзор курса -- темы, которые собираемся рассмотреть.
   2. Возможности языка
      1. Интерпретируемый
      2. Поддержка ООП
      3. Высокоуровневый
      4. Динамическая типизация
   3. Версии python
   4. python.org
   5. import this
   6. case sensitivity & отступы
   7. Кавычки и комментарии
   8. Типы переменных
   9. Преобразование типов
   11. Операторы
       1. Арифметические
       2. Сравнения
       3. Принадлежность
       4. Идентичность
   10. Immutable & Mutable
   12. if-elif-else
   13. for, while
   14. int, float
   15. import math

   Домашнее задание:

   Уровень 1.

   1. Даны два круга с общим центром и радиусами R1 и R2 (R1 > R2 ). Найти
   площади этих кругов S1 и S2 , а также площадь S3 кольца, внешний радиус
   которого равен R1, а внутренний радиус равен R2.
   Площадь круга: S = π·(R)^2.В качестве значения π использовать 3.14.

   2. Поменять местами содержимое переменных A и B и вывести новые
   значения A и B.

   3. С начала суток прошло N секунд (N — целое). Найти количество се-
   кунд, прошедших с начала последней минуты.

   4. Даны два целых числа: A, B. Проверить истинность высказывания:
   «Ровно одно из чисел A и B нечетное».

   5. Даны три числа. Найти наименьшее из них.

   6. Даны два целых числа A и B (A < B). Вывести в порядке убывания все це-
   лые числа, расположенные между A и B (не включая числа A и B), а также
   количество N этих чисел.

   7. Дано целое число N (> 0). Используя один цикл, найти сумму
   1 + 1/(1!) + 1/(2!) + 1/(3!) + ... + 1/(N!)
   (выражение N! — N–факториал — обозначает произведение всех целых
   чисел от 1 до N: N! = 1·2·...·N).

   8. Дано целое число N (> 0). Найти двойной факториал N:
   N!! = N·(N–2)·(N–4)·... (последний сомножитель равен 2,
   если N — четное, и 1, если N — нечетное).

   9. Даны десять вещественных чисел. Найти их среднее арифметическое.

   10.

   Уровень 2.

   1. Найти корни квадратного уравнения A·x 2 + B·x + C = 0, заданного
   своими коэффициентами A, B, C (коэффициент A не равен 0), если извест-
   но, что дискриминант уравнения положителен. Вывести вначале меньший,
   а затем больший из найденных корней. Корни квадратного уравнения на-
   ходятся по формуле x 1,2 = ( − B ± D ) / (2·A), где D — дискриминант, рав-
   ный B 2 – 4·A·C.

   2. Даны целые положительные числа A, B, C. На прямоугольнике раз-
   мера A × B размещено максимально возможное количество квадратов со
   стороной C (без наложений). Найти количество квадратов, размещенных
   на прямоугольнике, а также площадь незанятой части прямоугольника.

   3. Даны целочисленные координаты трех вершин прямоугольника, стороны
   которого параллельны координатным осям. Найти координаты его четвер-
   той вершины.

   4. Даны два целых числа: D (день) и M (месяц), определяющие правильную дату.
   Вывести знак Зодиака, соответствующий этой дате:
   «Водолей» (20.1–18.2), «Рыбы» (19.2–20.3), «Овен» (21.3–19.4), «Телец» (20.4–20.5),
   «Близнецы» (21.5–21.6), «Рак» (22.6–22.7), «Лев» (23.7–22.8), «Дева»
   (23.8–22.9), «Весы» (23.9–22.10), «Скорпион» (23.10–22.11), «Стрелец»
   (23.11–21.12), «Козерог» (22.12–19.1).

   5. Дано вещественное число A и целое число N (> 0). Используя один цикл,
   найти значение выражения 1 – A + A^2 – A^3 + ... + (–1)N·A^N.
   Условный оператор не использовать.

   6. Дано целое число N (> 0). Найти сумму 1^N + 2^(N–1) + ... + N^1 . Чтобы избе-
   жать целочисленного переполнения, вычислять слагаемые этой суммы с
   помощью вещественной переменной и выводить результат как веществен-
   ное число.

   7. Дано целое число N (> 0). Используя операции деления нацело и взя-
   тия остатка от деления, найти количество и сумму его цифр.

   8. Дано целое число N и набор из N целых чисел, упорядоченный по
   возрастанию. Данный набор может содержать одинаковые элементы. Вы-
   вести в том же порядке все различные элементы данного набора.

   9. Дано целое число N (> 2) и набор из N вещественных чисел. Набор
   называется пилообразным, если каждый его внутренний элемент либо
   больше, либо меньше обоих своих соседей (то есть является «зубцом»).
   Если данный набор является пилообразным, то вывести 0; в противном
   случае вывести номер первого элемента, не являющегося зубцом.


** iterables
*** Слайды
    16. Строки, срезы
        ~1. Юникодные строки
        ~2. Необрабатываемые строки (r'st\ro\chka')
    17. Методы строк
        ~1. intern
    18. Работа с символами
        ~1. chr, ord, unichr
    19. Списки
        1. Добавление
        2. Удаление
        3. Длина
        4. Повторение
        5. Принадлежность
        6. Итерация
        7. Функции
            1. list(),
            2. cmp(list1, list2)
            3. len(list)
            4. max(list)
            5. min(list)
            ~6. zip
            ~7. del
        8. Методы
            1. append
            2. count
            3. extend
            4. index
            5. insert
            6. pop
            7. remove
            8. reverse
            9. sort
        ~9. Генераторы
        ~10. Список как стек (почему эффективно)
        ~11. Список как очередь (почему не эффективно)
        ~12. Массив символов в строку ''.join(['a','b','c'])
        ~13. Копия массива a[:]. Пример когда требуется.
    20. Кортежи -- immutable
        ~1. Упаковка, распаковка
    21. Словари
        1. Доступ к элементам
        2. Удаление элементов
        3. Требования к ключам (уникальность, неизменяемость)
        4. Функции
            1. cmp()
            2. type()
            3. len()
            4. str()
        5. Методы
            1. clear()
            2. copy()
            3. fromkeys()
            4. get()
            5. items(), keys(), values()
            6. iteritems(), iterkeys(), itervalues()
            7. pop()
            8. popitem()
            9. setdefault()
            10. update()
        ~6. print и словари (table={'aba':13,'bca':87,'bcc':5};print '%(aba)d blah blah %(bcc)d' % table)

   Домашнее задание:

** functions
*** Слайды
    22. Функции
        1. Определение 
        2. Вызов
        3. Передача аргументов (по ссылке)
        4. Типы аргументов
           1. Обязательные
           2. Именованные
           3. По умолчанию
           4. Переменной длины
           5. Ключевые
        5. Область видимости в функции (global)
        6. Анонимные функции
        7. globals(), locals()
        8. Объект первого класса
        9. Декораторы
    23. Модули
        1. Создание модуля
        2. Импорт
           from ... import 
           import as
        3. dir()
        4. Пакеты

   Домашнее задание:

** classes
*** Слайды
    24. Классы
        1. Объявление класса
        2. Создание экземпляров класса
        3. Модификация класса в runtime (hasattr, getattr, setattr, delattr)
        4. gc
        5. Наследование
        6. Порядок вызова
        7. type(), issubclass(), isinstance()
        8. Базовые методы классов
        9. Перегрузка операторов
        10. Сокрытие данных
        11. Стандартные декораторы
            1. @staticmethod
            2. @classmethod
            3. @property
               1. @setter
               2. @deleter
    28. try-except-else-finally
    29. Аргументы исключений
    30. Генерация исключений 
    31. Пользовательские исключения

   Домашнее задание:

** misc
*** Слайды
    25. IO
        1. raw_input()
        2. open()
        3. read(), write()
        4. Менеджер контекста
        5. getopt()
    26. OS
    27. help()
    32. Отладка (pdb)
